services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: axum_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-axum_auth}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "${DB_PORT:-5433}:5432"
    networks:
      - axum_network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-axum_auth}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache/Job Queue
  redis:
    image: redis:7-alpine
    container_name: axum_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-password}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - axum_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Axum Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: axum_app
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${APP_PORT:-3001}:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - axum_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  axum_network:
    driver: bridge
