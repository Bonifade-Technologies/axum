services:
  # Redis Cache/Job Queue
  redis:
    image: redis:7-alpine
    container_name: axum_redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - axum_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # PostgreSQL Database (dev/local)
  postgres:
    image: postgres:17-alpine
    container_name: axum_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-appuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app_pass}
      POSTGRES_DB: ${POSTGRES_DB:-app_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Map to 5433 by default to avoid clashing with a host Postgres on 5432
    ports:
      - "${POSTGRES_HOST_PORT:-5433}:5432"
    networks:
      - axum_network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-appuser} -d ${POSTGRES_DB:-app_db}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Axum Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: axum_app
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${APP_PORT:-3003}:3003"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - axum_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3003/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  axum_network:
    driver: bridge
